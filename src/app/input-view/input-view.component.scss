@import "../../styles.scss";

.sidebar {
  position: fixed;
  top: calc(
    100px + 40px
  ); /* Adjust this to place it below the navbar and leave a bit of space */
  right: 0; /* Change from left to right */
  width: 250px;
  height: calc(100% - 87px); /* Adjust the height to fit the screen */
  background: $box-color;
  color: $text-color;
  display: flex;
  flex-direction: column;
  transition: transform 0.3s ease; /* Smooth transition */
  transform: translateX(100%); /* Move it out of the screen initially */
  border-radius: 20px;
  border-left: 1px solid #ffffff;
  border-top: 1px solid #ffffff;
  padding-top: 16px;
  z-index: 9999; /* Ensure sidebar is above all other elements */

  @media (max-width: 768px) {
    margin-top: 0.5rem;
  }
}

.sidebar.active {
  transform: translateX(0); /* Slide it in */
}

.sidebar .list-group-item {
  position: relative; /* For positioning the separator line */
  background: $box-color;
  color: $text-color;
  border: none; /* Remove any default borders */
  font-size: 1.6rem; /* Increase font size */
  text-align: center;
  margin-bottom: 40px; /* Space between items */
  padding: 10px 20px; /* Padding for better spacing inside the items */
  border-radius: 20px; /* Rounded corners */
  display: inline-block; /* Allow items to take as much space as needed */
}

.sidebar .list-group-item::after {
  content: "";
  position: absolute;
  bottom: -20px; /* Center line in the margin space */
  left: 50%;
  transform: translateX(-50%);
  width: 90%; /*x Width of the separating line */
  height: 2px; /* Thickness of the separating line */
  background-color: $text-color; /* Color of the separating line */
}

.list-group-item:hover {
  background-color: $box-color-light !important;
}

.sidebar-footer {
  border-top: 1px solid $text-color; /* Add a top border to the footer */
  margin-top: auto; /* Push the footer to the bottom */
}

.main-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin-top: 1rem;
  background-color: $primary-color !important;
}

.category-title {
  font-weight: bold;
  margin-top: 3.1rem;
  font-size: 4.5rem;
  background: linear-gradient(to right, $text-color, $hover-link-color);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  text-align: center;
  word-wrap: break-word; /* Ensure words wrap to the next line if they are too long */
  overflow-wrap: break-word; /* Break words if they are too long */
  white-space: normal; /* Allow text to wrap to the next line */

  @media (max-width: 768px) {
    font-size: 3rem;
  }
}

.constant-title {
  text-align: center;
  font-size: inherit; /* Inherit font size from parent */
  background: linear-gradient(to right, $text-color-dark, $text-color);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;

  @media (max-width: 768px) {
    font-size: 2.5rem;
  }
}

.dynamic-title {
  margin-top: 19px;
  overflow: visible;
  color: inherit; /* Ensure the text color is visible */
  display: block; /* Make sure it's displayed as a block element */
  background: linear-gradient(to right, darkblue, lightblue);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;

  @media (max-width: 768px) {
    margin-bottom: 7px;
    font-size: 2.6rem;
  }
}

.input-container {
  display: grid;
  grid-template-columns: 1fr auto; /* Define columns for input and button */
  align-items: center; /* Center items vertically */
  justify-content: space-between; /* Distribute items evenly */
  width: 100%;
  max-width: 100%; /* Ensure full width usage */
  height: 75px;
  border: 1px solid $box-color-light;
  border-radius: 30px;
  padding: 12px 20px; /* Padding around content */
  background-color: $box-color;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  color: $text-color;
  box-sizing: border-box; /* Include padding in total width/height */

  @media (max-width: 768px) {
    grid-template-columns: 1fr;
    grid-template-rows: auto auto;
    padding: 11px;
    padding-bottom: 10px;
    gap: 4rem; /* Increased space between input and button */
  }
}

.styled-input {
  grid-column: 1 / 2; /* Place the input in the first column */
  width: 100%;
  max-width: none; /* Remove max-width restriction to take full available space */
  border: none;
  outline: none;
  font-size: 1.3rem;
  border-radius: 30px;
  background: transparent;
  color: $text-color;
  transition: all 0.3s ease;
  box-shadow: inset 0 0 0 1px $box-color; /* Button outline */
  margin-left: -10px;
  /* Center text vertically */

  /* Center text vertically and align it to the left */
  display: flex;
  align-items: center;
  justify-content: flex-start; /* Align text to the left */
  padding-left: 10px; /* Add some padding for spacing from the left edge */
  padding-top: 10px;
}

.styled-input::placeholder {
  color: $text-color;
  opacity: 0.7;
}
.styled-button {
  grid-column: 2 / 3; /* Second column for button */
  max-width: none; /* Allow button to adjust based on content */
  width: auto; /* Auto width to fit content */
  background-color: rgb(82, 101, 214);
  color: $text-color;
  border: none;
  border-radius: 30px;
  cursor: pointer;
  justify-self: end; /* Align button to the right */
  display: flex;
  align-items: center;
  padding: 7px 35px; /* Padding inside the button */
  margin-right: 10px; /* Space from the right edge of the container */
  box-shadow: inset 0 0 0 1px $box-color-light; /* Button outline */
  overflow: hidden; /* Ensure contents do not overflow the button */
  transition: background 0.3s ease;
}

.styled-button:hover {
  background: darkblue !important; /* Change background color on hover */
}

.button-content {
  display: flex;
  align-items: center;
  width: 100%;
  justify-content: space-between;
}

.button-icon-wrapper {
  background: transparent;
  display: flex;
  align-items: center;
  justify-content: center;
  padding-right: 10px; /* Space between icon and separator */
  transition: transform 0.3s ease, opacity 0.3s ease;
}

.button-icon {
  width: 34px;
  height: 34px;
}

.button-separator {
  width: 1px;
  height: 24px; /* Adjust height as needed */
  background-color: #ffffff;
  margin: 0 10px;
}

/* Animation for icon disappearance and reappearance */
@keyframes iconDisappear {
  0% {
    transform: translateY(0);
    opacity: 1;
  }
  80% {
    transform: translateY(50%);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 0;
  }
}

@keyframes iconReappear {
  0% {
    opacity: 0;
    transform: translateY(50%);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.icon-disappear {
  animation: iconDisappear 0.5s forwards, iconReappear 0.5s 1.5s forwards; /* Disappear and reappear */
}

.button-text {
  text-align: center;
  font-size: 1.2rem;
  font-weight: bold;
  white-space: nowrap; /* Prevent text from wrapping */
  overflow: hidden; /* Clip the overflowing content */
  text-overflow: ellipsis; /* Show ellipsis if text overflows */
}

.no-copyright,
.notice {
  font-size: 0.9rem;
  color: rgb(82, 101, 214);
  text-align: center;
  background-color: $primary-color !important; /* Ensure background is dark */
}

.no-copyright {
  margin-top: 2.7rem;
}

.notice {
  opacity: 80%;
  margin-top: 0.8rem; /* Adjust the margin as needed */
  margin-bottom: 4.5rem; /* Ensure no extra space below */
}

/* Media queries for responsiveness */
@media (max-width: 768px) {
  .styled-input {
    width: 100%;
  }

  .styled-button {
    width: 100%;
  }

  .no-copyright {
    margin-top: 7.7rem;
  }
}

.photo-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr); /* 1 row with 4 columns */
  gap: 20px; /* Space between photos */
  justify-items: center; /* Center items horizontally */
  align-items: center; /* Center items vertically */
  margin-top: 90px; /* Space from the previous element */

  @media (max-width: 768px) {
    grid-template-columns: 1fr 1fr;
    gap: 15px;
  }
}

.photo-item {
  background-color: transparent; /* Transparent background */
  border-radius: 10px; /* Optional: rounded corners */
  overflow: hidden; /* Ensure images don't overflow */
  width: 150px; /* Consistent width for photos */
  height: 150px; /* Consistent height for photos */
  display: flex;
  justify-content: center;
  align-items: center;
  transition: transform 0.3s ease; /* Smooth transition for the transform property */

  @media (max-width: 768px) {
    width: 100px;
    height: 100px;
  }
}

.photo-item img {
  width: 100%; /* Make image fit the container */
  height: 100%; /* Maintain aspect ratio */
  object-fit: contain; /* Ensure the image scales uniformly */
  pointer-events: none; /* Consistent hover effect */
}

.photo-item:hover {
  transform: translateY(-40px); /* Slide up effect on hover */
}

.error-popup {
  position: absolute;
  top: 100%; /* Place it directly under the button */
  left: 50%;
  transform: translate(-50%, 20px); /* Initially below the button */
  background-color: rgba(255, 0, 0, 0.8);
  color: white;
  padding: 10px 20px;
  border-radius: 5px;
  text-align: center;
  z-index: 1000;
  opacity: 0;
  animation: fadeInUp 0.5s forwards; /* Animation for fading in */
}

@keyframes fadeInUp {
  0% {
    transform: translate(-50%, 20px); /* Start below the button */
    opacity: 0;
  }
  100% {
    transform: translate(-50%, 0); /* End directly under the button */
    opacity: 1;
  }
}

@media (max-width: 768px) {
  .error-popup {
    width: calc(100% - 60px); /* Adjust width for mobile */
    left: 50%;
    transform: translateX(-90%); /* Center align */
  }
}
